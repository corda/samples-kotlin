plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.springframework.boot'
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

dependencies {
    // Corda dependencies.
    implementation "$corda_release_group:corda-rpc:$corda_release_version"

    // CorDapp dependencies.
    implementation project(':contracts')
    implementation project(':workflows')
    implementation "net.corda:corda-core:$corda_release_version"
    implementation "net.corda:corda-jackson:$corda_release_version"
    implementation "net.corda:corda-rpc:$corda_release_version"
    implementation("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    runtimeOnly "org.apache.logging.log4j:log4j-web:${log4j_version}"
}

springBoot {
    mainClassName = "net.corda.samples.snl.webserver.Server"
}

tasks.register('runClassicGamesClient', JavaExec) {
    dependsOn assemble
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.corda.samples.snl.webserver.ServerKt'
    args '--server.port=50007', '--config.rpc.host=localhost', '--config.rpc.port=10006', '--config.rpc.username=user1', '--config.rpc.password=test'
}

tasks.register('runMegaGamesClient', JavaExec) {
    dependsOn assemble
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.corda.samples.snl.webserver.ServerKt'
    args '--server.port=50008', '--config.rpc.host=localhost', '--config.rpc.port=10009', '--config.rpc.username=user1', '--config.rpc.password=test'
}
