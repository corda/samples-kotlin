plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.springframework.boot'
}

dependencies {
    // Corda dependencies.
    implementation "$corda_core_group:corda-core:$corda_release_version"
    implementation "$corda_release_group:corda-jackson:$corda_release_version"
    implementation "$corda_release_group:corda-rpc:$corda_release_version"
    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"

    // CorDapp dependencies.
    implementation project(':contracts')
    implementation project(':workflows')
    implementation "$corda_release_group:corda-finance-workflows:$corda_release_version"

    implementation("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    implementation "org.springframework.boot:spring-boot-devtools:$spring_boot_version"

    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    runtimeOnly "org.apache.logging.log4j:log4j-web:$log4j_version"
}

springBoot {
    mainClassName = "net.corda.samples.auction.client.Starter"
}

tasks.register('runAuctionClient', JavaExec) {
    dependsOn assemble
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.corda.samples.auction.client.Starter'
}
